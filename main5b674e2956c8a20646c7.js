!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._link=e.link,this._name=e.name,this._likes=e.likes,this._likesLength=e.likes.length,this._owner=e.owner._id,this._idCard=e._id,this._userId=i,this._template=n,this._handleCardClick=r,this._popupConfirmClass=o,this._api=a}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.firstElementChild.cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._elementImage=this._element.querySelector(".element__image"),this._elementCaption=this._element.querySelector(".element__caption"),this._elementDelete=this._element.querySelector(".element__delete"),this._elementLike=this._element.querySelector(".element__like"),this._elementLikes=this._element.querySelector(".element__like-quantity"),this._setEventListeners(),this._elementImage.src=this._link,this._elementImage.alt=this._name,this._elementCaption.textContent=this._name,this._setLikeNumbers(this._likesLength),this._owner!==this._userId&&this._elementDelete.remove(),this._setLikeClasslist(this._likes),this._element}},{key:"_setLikeNumbers",value:function(e){this._elementLikes.textContent=0===e?"":e}},{key:"_isLiked",value:function(e){var t=this;return e.some((function(e){return e._id===t._userId}))}},{key:"_setLikeClasslist",value:function(e){this._isLiked(e)?this._elementLike.classList.add("element__like_active"):this._elementLike.classList.remove("element__like_active")}},{key:"_handleLikeClick",value:function(){var e=this;this._isLiked(this._likes)?this._api.deleteLike(this._idCard).then((function(t){e._setLikeNumbers(t.likes.length),e._likes=t.likes,e._setLikeClasslist(t.likes)})).catch((function(e){return alert("Ошибка при снятии лайка. ".concat(e))})):this._api.putLike(this._idCard).then((function(t){e._setLikeNumbers(t.likes.length),e._likes=t.likes,e._setLikeClasslist(t.likes)})).catch((function(e){return alert("Ошибка при установке лайка. ".concat(e))}))}},{key:"handleDeleteCard",value:function(){this._element.remove()}},{key:"_handleDeleteCard",value:function(){this._popupConfirmClass.open(this)}},{key:"_setEventListeners",value:function(){var e=this;this._elementLike.addEventListener("click",(function(){e._handleLikeClick()})),this._elementDelete.addEventListener("click",(function(){e._handleDeleteCard()})),this._elementImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._form=n,this._button=this._form.querySelector(this._data.submitButtonSelector),this._inputLists=Array.from(this._form.querySelectorAll(this._data.inputSelector))}var t,r;return t=e,(r=[{key:"_setSubmitButtonStatement",value:function(){this._isValidForm=this._form.checkValidity(),this._isValidForm?(this._button.classList.remove(this._data.inactiveButtonClass),this._button.disabled=!1):(this._button.classList.add(this._data.inactiveButtonClass),this._button.disabled=!0)}},{key:"_setSpanError",value:function(e){this._span=this._form.querySelector("#".concat(e.id,"-error")),this._span.textContent=e.validationMessage}},{key:"_removeSpanError",value:function(e){this._span=this._form.querySelector("#".concat(e.id,"-error")),this._span.textContent=""}},{key:"_removeInputErrorClass",value:function(e){e.classList.remove(this._data.inputErrorClass)}},{key:"_isValid",value:function(e){e.validity.valid?(this._setSpanError(e),this._setSubmitButtonStatement(),this._removeInputErrorClass(e)):(this._setSpanError(e),this._setSubmitButtonStatement(),e.classList.add(this._data.inputErrorClass))}},{key:"resetValidation",value:function(){var e=this;this._setSubmitButtonStatement(),this._inputLists.forEach((function(t){e._removeSpanError(t),e._removeInputErrorClass(t)}))}},{key:"enableValidation",value:function(){var e=this;this._setSubmitButtonStatement(),this._inputLists.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t)}))}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._section=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._section.append(e)}},{key:"prependItem",value:function(e){this._section.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"loadingMessage",value:function(e){e?(this._temporaryButtonContent=this._submitButton.textContent,this._submitButton.textContent="Сохранение..."):this._submitButton.textContent=this._temporaryButtonContent}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__form-closer")&&e.close()}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function h(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImageFigure=t._popup.querySelector(".popup__figure-img"),t._popupImageFigureCaption=t._popup.querySelector(".popup__figure-caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._popupImageFigure.src=t,this._popupImageFigure.alt=e,this._popupImageFigureCaption.textContent=e,l(_(a.prototype),"open",this).call(this)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._popupForm=n._popup.querySelector(".popup__form"),n._inputList=n._popupForm.querySelectorAll(".popup__input"),n._submitButton=n._popupForm.querySelector(".popup__button"),n._temporaryButtonContent="",n._handleSubmitForm=e,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;v(w(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e.loadingMessage(!0),e._handleSubmitForm(e._getInputValues()),e.close()}))}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"close",value:function(){v(w(a.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t,n){var r=t.name,o=t.description,i=t.avatar,a=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(r),this._description=document.querySelector(o),this._avatar=document.querySelector(i),this._api=n,this.userId=a}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{popupInputName:this._name.textContent,popupInputDescription:this._description.textContent}}},{key:"setUserInfoToApi",value:function(e,t){var n=this,r=e.data;this._api.setUserInfoToApi({name:r.popupInputName,about:r.popupInputDescription}).then((function(e){n.setUserInfoFromApi(e)})).catch((function(e){return console.log(e)})).finally((function(){return t.loadingMessage(!1)}))}},{key:"setUserInfoFromApi",value:function(e){this._name.textContent=e.name,this._description.textContent=e.about,this._avatar.style.backgroundImage="url(".concat(e.avatar,")"),this.userId=e._id}}],n&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_isOk",value:function(e){return e.ok?e.json():Promise.reject("Произошла ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"users/me/"),{method:"GET",headers:this._headers}).then(this._isOk)}},{key:"setUserInfoToApi",value:function(e){return fetch("".concat(this._baseUrl,"users/me/"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._isOk)}},{key:"setUserPicToApi",value:function(e){return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._isOk)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then(this._isOk)}},{key:"setNewCard",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._isOk)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._isOk)}},{key:"putLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._isOk)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._isOk)}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=T(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function R(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var F,A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._popupForm=n._popup.querySelector(".popup__form"),n._handleSubmitForm=e,n}return t=a,(n=[{key:"open",value:function(e){P(U(a.prototype),"open",this).call(this),this._element=e}},{key:"setEventListeners",value:function(){var e=this;P(U(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._element._idCard).then((function(){e._element.handleDeleteCard()})).catch((function(e){alert("Ошибка ".concat(e))})),e.close()}))}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s),B=document.querySelector("#popup-profile"),D=document.querySelector(".profile__edit-button"),x=document.forms.popupFormProfile,V=document.querySelector("#popup-card"),N=document.forms.popupFormCard,M=document.querySelector("#profile-add-button"),J=document.querySelector("#popup-image"),G=document.querySelector("#popup-confirm"),H=document.querySelector("#popup-avatar"),z=document.querySelector(".profile__avatar"),K=document.forms.popupFormAvatar,Q={},W=new L({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41/",headers:{authorization:"05f5ca8c-a3fe-4352-832f-702af14f0f21","Content-Type":"application/json"}});W.getUserInfo().then((function(e){ee.setUserInfoFromApi(e)})).catch((function(e){return alert("Ошибка при установке данных пользователя ".concat(e))})),W.getInitialCards().then((function(e){var t=new i({items:e,renderer:function(e){t.addItem($(e))}},".elements");t.renderItems()})).catch((function(e){return alert("Ошибка при заполнении страницы карточками ".concat(e))})),F={formSelector:".popup__form",inputSelector:".popup__input",inputErrorClass:"popup__input_type_error",errorSpanClass:"popup__input-error",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_type_disable"},Array.from(document.querySelectorAll(F.formSelector)).forEach((function(e){var t=new r(F,e),n=e.getAttribute("name");Q[n]=t,t.enableValidation()}));var X=new y(J);X.setEventListeners();var Y=new A((function(e){return W.deleteCard(e)}),G);function Z(e,t){X.open(e,t)}function $(e){return new t(e,"#element-template",Z,Y,ee.userId,W).generateCard()}Y.setEventListeners();var ee=new O({name:".profile__name",description:".profile__description",avatar:".profile__avatar",id:{}},W),te=new C((function(e){ee.setUserInfoToApi({data:e},te)}),B);te.setEventListeners();var ne=new C((function(e){var t={};t.name=e.popupInputCard,t.link=e.popupInputLink,W.setNewCard(t).then((function(e){new i({},".elements").prependItem($(e))})).catch((function(e){return alert("Ошибка при добавлении карточки ".concat(e))})).finally((function(){return ne.loadingMessage(!1)}))}),V);ne.setEventListeners(),D.addEventListener("click",(function(){var e=ee.getUserInfo(),t=e.popupInputName,n=e.popupInputDescription;te.setInputValues({popupInputName:t,popupInputDescription:n}),Q[x.getAttribute("name")].resetValidation(),te.open()})),M.addEventListener("click",(function(){Q[N.getAttribute("name")].resetValidation(),ne.open()}));var re=new C((function(e){var t={};t.avatar=e.popupInputLinkAvatar,W.setUserPicToApi(t).then((function(e){ee.setUserInfoFromApi(e)})).catch((function(e){return alert("Ошибка при обновлении аватара ".concat(e))})).finally((function(){return re.loadingMessage(!1)}))}),H);re.setEventListeners(),z.addEventListener("click",(function(){Q[K.getAttribute("name")].resetValidation(),re.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,